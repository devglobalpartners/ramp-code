# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
sys.path.insert(0, os.path.abspath('..'))
import sphinx_bootstrap_theme
import numpy as np
# -- Project information -----------------------------------------------------

project = 'solaris'
copyright = '2019, CosmiQ Works'
author = 'CosmiQ Works'
license = 'Apache 2.0'
import time
copyright = u'2018-{}, CosmiQ Works: an IQT Lab'.format(time.strftime("%Y"))

# The full version, including alpha/beta/rc tags
release = '0.4.0'
version = '0.4.0'

# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.napoleon',
    'sphinx.ext.doctest',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx.ext.autosummary',
    'sphinx.ext.coverage',
    'sphinx.ext.imgmath',
    'sphinx.ext.viewcode',
    'sphinx.ext.githubpages',
    # 'autoapi.extension',
    'sphinx.ext.autosectionlabel',
    'nbsphinx'
]

# autoapi_type = 'python'
# autoapi_template_dir = '_templates/'
# autoapi_dirs = ['../solaris']
# autoapi_options = ['members', 'undoc-members', 'special-members']
# autoapi_ignore = ['*data*',
#                   '*bin*',
#                   '*migrations*']
# autoapi_root = 'api'

autodoc_mock_imports = ['shapely', 'fiona', 'pandas', 'geopandas', 'cv2',
                        'numpy', 'gdal', 'tqdm', 'rtree', 'networkx',
                        'rasterio', 'scipy', 'skimage', 'tensorflow', 'torch',
                        'torchvision', 'yaml', 'affine', 'albumentations',
                        'rio_tiler', 'PIL', 'matplotlib', 'rio_cogeo',
                        'pyproj']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'bootstrap'
html_theme_path = sphinx_bootstrap_theme.get_html_theme_path()

html_theme_options = {
    'source_link_position': "footer",
    'bootswatch_theme': "paper",
    'bootstrap_version': "3",
    'navbar_links': [
                     ("Tutorials", "tutorials/index"),
                     ("API", "api/index")
                     ],

    }


# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']
html_logo = 'solaris_logo_tiny_black.png'

def setup(app):
    app.add_stylesheet("custom_styles.css")

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
html_sidebars = {'**': ['custom_sidebar.html', 'sourcelink.html', 'searchbox.html']}

# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'solarisdoc'


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'solaris', 'solaris Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'solaris', 'solaris Documentation',
     author, 'solaris'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']


# -- Extension configuration -------------------------------------------------

# -- Options for intersphinx extension ---------------------------------------

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {
    "python": ('https://docs.python.org/', None),
    "rasterio": ('https://rasterio.readthedocs.io/en/latest/', None),
    "pandas": ('http://pandas.pydata.org/pandas-docs/stable/', None),
    "geopandas": ('http://geopandas.org/', None),
    "rtree": ('http://toblerity.org/rtree/', None),
    "shapely": ('https://shapely.readthedocs.io/en/stable/', None),
    'numpy': ('https://numpy.org/doc/stable/', None),
    'scipy': ('http://docs.scipy.org/doc/scipy/reference/', None),
    'PyTorch': ('http://pytorch.org/docs/master/', None)
    }
